{"version":3,"sources":["SimpleCard.jsx","Fact.js","AddScreen.jsx","ChooseCard.jsx","ChooseScreen.jsx","App.js","theme.js","index.js"],"names":["SimpleCard","Card","variant","CardContent","Typography","component","this","props","title","color","category","description","CardActions","Button","onClick","removeChoice","index","size","Component","LightBulbIcon","SvgIcon","d","useStyles","makeStyles","theme","root","margin","spacing","lightBulb","verticalAlign","marginRight","Fact","classes","className","fact","AddScreen","addChoice","e","state","choiceValue","trim","cards","card","key","chosen","push","setState","changeChoice","target","value","makeChoice","console","log","i","splice","chooseCards","count","map","Container","maxWidth","Box","my","gutterBottom","TextField","onChange","id","label","to","ChooseCard","ChooseScreen","App","addScreen","chooseScreen","axios","get","then","res","data","text","exact","path","render","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","ReactDOM","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.046c856c.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\nclass SimpleCard extends Component {\n\n    render() { \n        \n        return ( \n            <Card variant=\"outlined\">\n                <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {this.props.title}\n                    </Typography>\n                    <Typography color=\"textSecondary\">\n                        {this.props.category}\n                    </Typography>\n                    <Typography variant=\"body2\" component=\"p\">\n                        {this.props.description}\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                <Button onClick={() => this.props.removeChoice(this.props.index)} size=\"small\">Delete</Button>\n                </CardActions>\n            </Card>\n         );\n    }\n}\n\nexport default SimpleCard;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Typography from '@material-ui/core/Typography';\n\nfunction LightBulbIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M9 21c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-1H9v1zm3-19C8.14 2 5 5.14 5 9c0 2.38 1.19 4.47 3 5.74V17c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2.26c1.81-1.27 3-3.36 3-5.74 0-3.86-3.14-7-7-7zm2.85 11.1l-.85.6V16h-4v-2.3l-.85-.6C7.8 12.16 7 10.63 7 9c0-2.76 2.24-5 5-5s5 2.24 5 5c0 1.63-.8 3.16-2.15 4.1z\" />\n    </SvgIcon>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(6, 0, 3),\n  },\n  lightBulb: {\n    verticalAlign: 'middle',\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default function Fact(props) {\n  const classes = useStyles();\n  return (\n    <Typography className={classes.root} color=\"textSecondary\">\n      <LightBulbIcon className={classes.lightBulb} />\n      Fun Fact: {props.fact}\n    </Typography>\n  );\n}\n","import React, {Component} from 'react';\nimport SimpleCard from './SimpleCard';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Fact from './Fact';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {Link} from 'react-router-dom'\n\nclass AddScreen extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            cards: this.props.cards,\n            choiceValue: '',\n        };\n    }\n\n    addChoice = (e) => {\n        if(this.state.choiceValue.trim() !== ''){\n            const cards = this.state.cards\n            const card = {\n                key: this.state.choiceValue,\n                title: this.state.choiceValue,\n                chosen: true,\n            }\n            cards.push(card)\n            this.setState({cards})\n        }\n    }\n\n    changeChoice = (e) => {\n        this.setState({choiceValue: e.target.value})\n    }\n\n    makeChoice = (e) => {\n        console.log(this.state.cards)\n    }\n\n    removeChoice = (i) => {\n        const cards = this.state.cards;\n        cards.splice(i, 1);\n        const chooseCards = [];\n        var count = 0;\n        cards.map(card => {\n            if(count < 3){\n                chooseCards.push(card);\n                count += 1;\n            }\n        })\n        this.setState({cards,chooseCards})\n    }\n\n\n    render() { \n        return ( \n            <Container maxWidth=\"sm\">\n            <Box my={2}>\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                    <center>\n                    Add your choices!\n                    </center>\n                </Typography>\n                <TextField onChange={this.changeChoice} value={this.choiceValue} id=\"outlined-basic\" label=\"Choice\" variant=\"outlined\"/>\n                <Box my={3}>\n                    <Button onClick={this.addChoice} variant=\"contained\" color=\"primary\">\n                        Add Choice\n                    </Button>\n                    {/* <Button onClick={this.makeChoice} variant=\"contained\" color=\"primary\">\n                    Make Choice \n                    </Button> */}\n                    <Link to='/choose'>\n                        <Button variant='contained' color='primary'>\n                            Make a Decision \n                        </Button>\n                    </Link>\n                    <Link to='/random'>\n                        <Button variant='contained' color='primary'>\n                            Make a random choice\n                        </Button>\n                    </Link>\n                </Box>\n                {this.state.cards.map((card, index) => ( \n                    <SimpleCard key={card.key} title={card.title} index={index} removeChoice={this.removeChoice}/>\n                ))}\n                <Fact fact={this.props.fact} />\n            </Box>\n            </Container>\n         );\n    }\n}\n\nexport default AddScreen;","import React, {Component} from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\nclass ChooseCard extends Component {\n\n    render() { \n        \n        return ( \n            <Card variant=\"outlined\">\n                <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {this.props.title}\n                    </Typography>\n                    <Typography color=\"textSecondary\">\n                        {this.props.category}\n                    </Typography>\n                    <Typography variant=\"body2\" component=\"p\">\n                        {this.props.description}\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                <Button onClick={() => this.props.removeChoice(this.props.index)} size=\"small\">Remove</Button>\n                </CardActions>\n            </Card>\n         );\n    }\n}\n\nexport default ChooseCard;","import React, {Component} from 'react';\nimport ChooseCard from './ChooseCard';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Fact from './Fact';\n// import TextField from '@material-ui/core/TextField';\n// import Button from '@material-ui/core/Button';\n\nclass ChooseScreen extends Component {\n\n    constructor(props){\n        super(props);\n        var count = 0;\n        const chooseCards = [];\n        const cards = [...this.props.cards];\n        cards.map(card => {\n            if(count < 3){\n                chooseCards.push(card);\n                count += 1;\n            }\n        })\n        this.state = {\n            cards,\n            chooseCards,\n        };\n    }\n\n    removeChoice = (i) => {\n        const cards = this.state.cards;\n        cards.splice(i, 1);\n        const chooseCards = [];\n        var count = 0;\n        cards.map(card => {\n            if(count < 3){\n                chooseCards.push(card);\n                count += 1;\n            }\n        })\n        this.setState({cards,chooseCards})\n    }\n\n    render() { \n        return ( \n            <Container maxWidth=\"sm\">\n            <Box my={4}>\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                    <center>\n                    Pick a choice to remove.\n                    </center>\n                </Typography>\n                {this.state.chooseCards.map((card, index) => ( \n                    <ChooseCard key={card.key} title={card.title} index={index} removeChoice={this.removeChoice}/>\n                ))}\n                <Fact fact={this.props.fact}/>\n            </Box>\n            </Container>\n         );\n    }\n}\n\nexport default ChooseScreen;","import React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AddScreen from './AddScreen';\nimport ChooseScreen from './ChooseScreen';\nimport axios from 'axios';\n\nclass App extends Component {\n\n  constructor(props){\n      super(props);\n      this.state = {\n          cards: [],\n          fact: '...',\n      };\n  }\n\n  componentDidMount(){\n    axios.get('https://uselessfacts.jsph.pl/random.json?language=en')\n    .then(res => {\n      this.setState({fact: res.data.text})\n    })\n  }\n\n  addScreen = () => {\n    return (\n      <Fragment>\n        <AddScreen cards={this.state.cards} fact={this.state.fact}/>\n      </Fragment>\n    )\n  }\n\n  chooseScreen = () => {\n    return (\n      <Fragment>\n        <ChooseScreen cards={this.state.cards} fact={this.state.fact}/>\n      </Fragment>\n    )\n  }\n\n  render(){\n    return (\n      <Router>\n        <Switch>\n          <Route exact path='/' render={this.addScreen} /> \n          <Route exact path='/choose' render={this.chooseScreen} /> \n        </Switch>\n      </Router>\n    );\n  }\n\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}